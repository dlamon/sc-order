spring:
  cloud:
    consul:
      host: 192.168.99.103
      port: 8500
    config:
      name: order
      profile: dev
      fail-fast: true
      discovery:
        enabled: true
        service-id: config
ribbon:
  # 设置ribbon超时时间, 该超时时间应该大于或等于hystrix中设置的超时时间
  ReadTimeout: 3000
feign:
  hystrix:
    # 开启feign hystrix 控制
    enabled: true
hystrix:
  command:
    # 配置hystrix默认超时时间控制，该控制时间会受到ribbon超时时间影响
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 2000
    # 针对特定接口配置超时时间控制， 该控制时间会受到ribbon超时时间控制
    ProductClient#listByProductId(List):
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 3000
      circuitBreaker:
        # 开启hystrix 断路器
        enabled: true
        # 在滚动时间窗口中断路器的最小请求数
        requestVolumeThreshold: 10
        # 熔断后，hystrix会开启一次休眠时间窗，等待sleepWindowInMilliseconds毫秒后将进入半熔断状态。
        # 进入半熔断状态后，hystrix会再次尝试进行一次正常服务的访问，如果访问成功，则断路器关闭，后续请求将继续访问正常服务
        # 如果访问失败，则断路器继续保持打开状态
        sleepWindowInMilliseconds: 10000
        # 设置断路器打开的错误百分比条件，例如在滚动窗口中，发生了10次请求，如果出现了7次异常，则错误百分比为70%，断路器将为打开状态
        errorThresholdPercentage: 60
  metrics:
    enabled: true
logging:
  level:
    root: info
    org.springframework.web: trace